/* Offset for the sticky header */
:root {
    scroll-padding-top: 4rem;
}

body {
    height: 100%; 
    margin: 0;
    padding: 0;
    border: 0;
    color: #333 !important;
}
[data-theme='dark'] body {
    color: #ccc !important;
}

#theme-toggle-moon {
    display: block;
}
[data-theme='dark'] #theme-toggle-moon {
    display: none;
}
#theme-toggle-sun {
    display: none;
}
[data-theme='dark'] #theme-toggle-sun {
    display: block;
}

blockquote {
    padding-left: 0.625rem;
    border-left: 0.375rem solid #ccc;
}

/* For use with the code_line-number_word-wrap_switcher_jquery.js Pelican plugin */
code {
    overflow: auto;
    /* This uses `white-space: pre-wrap` to get elements within <pre> tags to wrap. Python, for code chunks within three backticks (```), doesn't wordwrap code lines by default, because they're within <pre> tags, which don't wrap by default. See https://github.com/github/markup/issues/168 , which is specifically about this parsing issue, even though that link's discussion is talking about GitHub. */
    white-space: pre-wrap;       /* css-3 */
    white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */
    white-space: -pre-wrap;      /* Opera 4-6 */
    white-space: -o-pre-wrap;    /* Opera 7 */
    word-wrap: break-word;       /* Internet Explorer 5.5+ */
    color: #333 !important;
    background-color: var(--bs-gray-200) !important;
}
[data-theme='dark'] code {
    color: #ccc !important;
    background-color: var(--bs-dark-gray-200) !important;
}

/* Following http://bililite.com/blog/2012/08/05/line-numbering-in-pre-elements/, use CSS to add line numbers to all spans that have the class 'code-line' */
.highlight pre {
    counter-reset: linecounter;
    padding-left: 2em;
}
.highlight pre span.code-line {
    counter-increment: linecounter;
    padding-left: 1em;
    text-indent: -1em;
    display: inline-block;
}
.highlight pre span.code-line:before {
    content: counter(linecounter);
    padding-right: 1em;
    display: inline-block;
    color: grey;
    text-align: right;
}
.highlight > pre > span > code, .highlight > pre > code {
    background-color: transparent !important;
}
[data-theme='dark'] .highlight pre span.code-line:before {
    content: counter(linecounter);
    padding-right: 1em;
    display: inline-block;
    color: grey;
    text-align: right;
}


/* pagination */
.pagination > li > a
{
    background-color: var(--bs-light);
    color: var(--bs-gray-900);
}
.pagination > li > a:focus,
.pagination > li > a:hover,
.pagination > li > span:focus,
.pagination > li > span:hover
{
    color:  var(--bs-gray-600);
    background-color: #eee;
    border-color: #ddd;
}
.pagination > .active > a
{
    color: var(--bs-gray-900) !important;
    background-color: white !important;
    border: solid 1px !important;
}
.pagination > .active > a:hover
{
    background-color: var(--bs-light) !important;
    border: solid 1px;
}

[data-theme='dark'] .pagination > li > a
{
    background-color: var(--bs-dark-light);
    color: var(--bs-dark-gray-900);
}
[data-theme='dark'] .pagination > li > a:focus,
[data-theme='dark'] .pagination > li > a:hover,
[data-theme='dark'] .pagination > li > span:focus,
[data-theme='dark'] .pagination > li > span:hover
{
    color: var(--bs-dark-gray-600);
    background-color: #111;
    border-color: #222;
}
[data-theme='dark'] .pagination > .active > a
{
    color: var(--bs-dark-gray-900) !important;
    background-color: black !important;
    border: solid 1px !important;
}
[data-theme='dark'] .pagination > .active > a:hover
{
    background-color: var(--bs-dark-light) !important;
    border: solid 1px;
}